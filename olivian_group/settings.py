"""
Django settings for olivian_group project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see:
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see:
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

SITE = 'Olivian Group'

# Base directory of the project
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY SETTINGS
SECRET_KEY = 'django-insecure-vh-9#d%)5mfiqvcyb2te*gj3(4^+#uw&&p&ylc#m!iq+ws)@b%'
DEBUG = True  # Change to True for development

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    'olivian.co.ke',
    'www.olivian.co.ke'
]

# APPLICATIONS INSTALLED
INSTALLED_APPS = [
    # Django default apps
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party apps
    'django_ckeditor_5',
    'channels',
    'chat',

    # Custom apps
    'core',
    'products',
    'projects',
    'blog',
    'contact',
    'account',
    'services',
]

# MIDDLEWARE CONFIGURATION
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# URL CONFIGURATION
ROOT_URLCONF = 'olivian_group.urls'

# TEMPLATE CONFIGURATION
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.common_context',
            ],
        },
    },
]

# WSGI APPLICATION
WSGI_APPLICATION = 'olivian_group.wsgi.application'

# Add Channels configuration
ASGI_APPLICATION = 'olivian_group.asgi.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
        # For production, use Redis:
        # 'BACKEND': 'channels_redis.core.RedisChannelLayer',
        # 'CONFIG': {
        #     "hosts": [('127.0.0.1', 6379)],
        # },
    },
}

# DATABASE CONFIGURATION
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'olivian_group_db',
        'USER': 'root',
        'PASSWORD': '',
        'HOST': 'localhost',  # Change if using a remote DB
        'PORT': '3306',       # Default MySQL port
    }
}


# PASSWORD VALIDATION
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# LANGUAGE AND TIMEZONE SETTINGS
LANGUAGE_CODE = 'sw'
TIME_ZONE = 'Africa/Nairobi'

USE_I18N = True
USE_L10N = True
USE_TZ = False

# Supported Languages
LANGUAGES = [
    ('en', 'English'),
    ('sw', 'Swahili'),
    ('fr', 'French'),
    ('ar', 'Arabic'),
    ('kik', 'Kikuyu'),
]

LOCALE_PATHS = [BASE_DIR / 'locale']

LANGUAGE_COOKIE_NAME = 'django_language'
LANGUAGE_COOKIE_AGE = 86400 * 30  # 30 days

# STATIC AND MEDIA FILES CONFIGURATION
STATIC_URL = '/static/'

# In development, serve static files from STATICFILES_DIRS
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# In production, use collectstatic to gather files in STATIC_ROOT
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media file settings
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# DEFAULT PRIMARY KEY TYPE
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CKEDITOR CONFIGURATION
CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': [
            'heading', '|', 'bold', 'italic', 'underline', 'strikethrough', 'subscript', 'superscript', '|',
            'link', 'bulletedList', 'numberedList', 'blockQuote', '|',
            'insertTable', 'imageUpload', 'mediaEmbed', '|',
            'alignment', 'outdent', 'indent', '|',
            'undo', 'redo', '|',
            'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', '|',
            'codeBlock', 'horizontalLine'
        ]
    }
}

CKEDITOR_5_FILE_STORAGE = "django.core.files.storage.FileSystemStorage"
CKEDITOR_5_UPLOAD_PATH = "uploads/"

# EMAIL CONFIGURATION
if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # Development mode
else:
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST = 'da10.host-ww.net'  # Use actual SMTP provider
    EMAIL_PORT = 587
    EMAIL_USE_TLS = True
    EMAIL_HOST_USER = 'admin@olivian.co.ke'
    EMAIL_HOST_PASSWORD = '@Olivian2024'  # Secure this in an environment variable
    DEFAULT_FROM_EMAIL = 'Olivian Group <info@olivian.co.ke>'

# AUTHENTICATION SETTINGS
LOGIN_REDIRECT_URL = '/account/dashboard/'  # Redirect after login
LOGOUT_REDIRECT_URL = '/'  # Redirect after logout

# Jazzmin settings
JAZZMIN_SETTINGS = {
    # title of the window (Will default to current_admin_site.site_title if absent or None)
    "site_title": "Jazminn Admin",
    
    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_header": "Jazminn",
    
    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)
    "site_brand": "Jazminn Admin",
    
    # Logo to use for your site, must be present in static files, used for brand on top left
    # "site_logo": "img/logo.png",
    
    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)
    # "login_logo": None,
    
    # Logo to use for login form in dark theme (defaults to login_logo)
    # "login_logo_dark": None,
    
    # CSS classes that are applied to the logo above
    "site_logo_classes": "img-circle",

    # Relative paths to custom CSS/JS scripts (must be present in static files)
    "custom_css": "css/jazzmin-custom.css",
    "custom_js": "js/jazzmin-custom.js",

    # Relative path to a favicon for your site, will default to site_logo if absent (ideally 32x32 px)
    # "site_icon": None,
    
    # Welcome text on the login screen
    "welcome_sign": "Welcome to Jazminn Admin",
    
    # Copyright on the footer
    "copyright": "Jazminn Ltd",
    
    # List of model admins to search from the search bar, search bar omitted if excluded
    # If you want to use a single search field you don't need to use a list, you can use a simple string 
    "search_model": ["auth.User", "core.QuoteRequest", "blog.Post"],
    
    # Field name on user model that contains avatar ImageField/URLField/Charfield or a callable that receives the user
    "user_avatar": None,
    
    ############
    # Top Menu #
    ############
    # Links to put along the top menu
    "topmenu_links": [
        # Url that gets reversed (Permissions can be added)
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        
        # External url that opens in a new window (Permissions can be added)
        {"name": "View Site", "url": "/", "new_window": True},
        
        # Model admin to link to (Permissions checked against model)
        {"model": "auth.User"},
        
        # App with dropdown menu to all its models pages (Permissions checked against models)
        {"app": "core"},
        {"app": "blog"},
        {"app": "products"},
        {"app": "projects"},
        {"app": "services"},
        {"app": "contact"},
    ],
    
    #############
    # User Menu #
    #############
    # Additional links to include in the user menu on the top right ("app" url type is not allowed)
    "usermenu_links": [
        {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},
        {"model": "auth.user"}
    ],
    
    #############
    # Side Menu #
    #############
    # Whether to display the side menu
    "show_sidebar": True,
    
    # Whether to aut expand the menu
    "navigation_expanded": True,
    
    # Hide these apps when generating side menu e.g (auth)
    "hide_apps": [],
    
    # Hide these models when generating side menu (e.g auth.user)
    "hide_models": [],
    
    # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
    "order_with_respect_to": [
        "core", 
        "blog", 
        "products", 
        "projects", 
        "services", 
        "contact", 
        "chat",
        "auth"
    ],
    
    # Custom icons for side menu apps/models
    # Icons should be a font awesome class or a simple font awesome icon name
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "core.QuoteRequest": "fas fa-file-invoice-dollar",
        "core.SiteSettings": "fas fa-cogs",
        "core.Newsletter": "fas fa-envelope",
        "core.AdminNotification": "fas fa-bell",
        "blog.Post": "fas fa-blog",
        "blog.Category": "fas fa-folder",
        "blog.Tag": "fas fa-tags",
        "blog.Comment": "fas fa-comments",
        "products.Product": "fas fa-box",
        "products.Category": "fas fa-sitemap",
        "projects.Project": "fas fa-project-diagram",
        "services.Service": "fas fa-concierge-bell",
        "contact.Contact": "fas fa-envelope-open-text",
        "chat.ChatSession": "fas fa-comments",
    },
    
    # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",
    
    #################
    # Related Modal #
    #################
    # Use modals instead of popups
    "related_modal_active": True,
    
    #############
    # UI Tweaks #
    #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    "custom_css": None,
    "custom_js": None,
    
    # Whether to link font from Google
    "use_google_fonts_cdn": True,
    
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": False,
    
    ###############
    # Change view #
    ###############
    # Render out the change view as a single form, or in tabs, current options are
    # - single
    # - horizontal_tabs (default)
    # - vertical_tabs
    # - collapsible
    # - carousel
    "changeform_format": "horizontal_tabs",
    
    # override change forms on a per modeladmin basis
    "changeform_format_overrides": {
        "auth.user": "collapsible",
        "auth.group": "vertical_tabs",
    },
    
    # Add a language dropdown into the admin
    "language_chooser": False,
}

# Jazzmin UI Customizer settings
JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-primary",
    "accent": "accent-primary",
    "navbar": "navbar-primary navbar-dark",
    "no_navbar_border": True,
    "navbar_fixed": True,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-primary",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": True,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "default",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    },
    "actions_sticky_top": False
}
